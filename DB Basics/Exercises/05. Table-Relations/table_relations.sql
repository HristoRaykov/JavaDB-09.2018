CREATE DATABASE table_relations_1;USE table_relations_1;CREATE TABLE persons (	person_id INT NOT NULL UNIQUE ,	first_name VARCHAR(20),	salary DECIMAL(10,2),	passport_id INT NOT NULL UNIQUE);CREATE TABLE passports (	passport_id INT NOT NULL UNIQUE,	passport_number VARCHAR(60) NOT NULL UNIQUE);INSERT INTO persons (person_id, first_name, salary, passport_id)VALUES	   (1, 'Roberto', 43300.00, 102),	   (2, 'Tom', 56100.00, 103),	   (3, 'Yana', 60200.00, 101);INSERT INTO passports (passport_id, passport_number)VALUES	   (101, 'N34FG21B'),	   (102, 'K65LO4R7'),	   (103, 'ZE657QP2');ALTER TABLE passportsADD PRIMARY KEY (passport_id);ALTER TABLE personsADD PRIMARY KEY (person_id);ALTER TABLE personsADD FOREIGN KEY (passport_id) REFERENCES passports(passport_id);CREATE DATABASE one_to_many;USE one_to_many;CREATE TABLE manufacturers(	manufacturer_id INT PRIMARY KEY ,	name VARCHAR(20),	established_on DATE);CREATE TABLE models(	model_id INT PRIMARY KEY ,	name VARCHAR(20),	manufacturer_id INT NOT NULL,	FOREIGN KEY (manufacturer_id)	REFERENCES manufacturers(manufacturer_id));INSERT INTO manufacturers(manufacturer_id, name, established_on)VALUES	   (1, 'BMW', '1916-03-01'),	   (2, 'Tesla', '2003-01-01'),	   (3, 'Lada', '1966-05-01');INSERT INTO models(model_id, name, manufacturer_id)VALUES	   (101,'X1',1),	   (102,'i6',1),	   (103,'Model S',2),	   (104,'Model X',2),	   (105,'Model 3',2),	   (106,'Nova',3);CREATE DATABASE many_to_many;USE many_to_many;CREATE TABLE students(	student_id INT PRIMARY KEY,	name VARCHAR(20));INSERT INTO students(student_id, name)VALUES	   (1,'Mila'),	   (2,'Toni'),	   (3,'Ron');CREATE TABLE exams(	exam_id INT PRIMARY KEY,	name VARCHAR(20));INSERT INTO exams(exam_id,name)VALUES	   (101,'Spring MVC'),	   (102,'Neo4j'),	   (103,'Oracle 11g');CREATE TABLE students_exams(	student_id INT NOT NULL,	exam_id INT NOT NULL,	PRIMARY KEY (student_id,exam_id),	FOREIGN KEY (student_id) REFERENCES students(student_id),	FOREIGN KEY (exam_id) REFERENCES exams(exam_id));INSERT INTO students_exams(student_id, exam_id)VALUES	   (1,101),	   (1,102),	   (2,101),	   (3,103),	   (2,102),	   (2,103);CREATE DATABASE self_reference;USE self_reference;CREATE TABLE teachers (	teacher_id INT PRIMARY KEY,	name VARCHAR(20),	manager_id INT);INSERT INTO teachers (teacher_id, name, manager_id)VALUES	   (101,'John',NULL),	   (102,'Maya',106),	   (103,'Silvia',106),	   (104,'Ted',105),	   (105,'Mark',101),	   (106,'Greta',101);ALTER TABLE teachersADD FOREIGN KEY (manager_id) REFERENCES teachers(teacher_id);CREATE DATABASE online_store;USE online_store;CREATE TABLE item_types(	item_type_id INT(11) PRIMARY KEY,	name VARCHAR(50));CREATE TABLE items (	item_id INT(11) PRIMARY KEY,	name VARCHAR(50),	item_type_id INT(11),	FOREIGN KEY (item_type_id) REFERENCES item_types(item_type_id));CREATE TABLE orders (	order_id INT(11),	customer_id INT(11),	PRIMARY KEY (order_id));CREATE TABLE order_items(	order_id INT(11),	item_id INT(11),	PRIMARY KEY (order_id,item_id),	FOREIGN KEY (item_id) REFERENCES items(item_id),	FOREIGN KEY (order_id) REFERENCES orders(order_id));CREATE TABLE cities(	city_id INT(11) PRIMARY KEY,	name VARCHAR(50));CREATE TABLE customers(	customer_id INT(11) PRIMARY KEY,	name VARCHAR(50),	birthday DATE,	city_id INT(11),	FOREIGN KEY (city_id) REFERENCES cities(city_id));ALTER TABLE ordersADD FOREIGN KEY (customer_id) REFERENCES customers(customer_id);CREATE DATABASE university;USE university;CREATE TABLE majors(	major_id int(11) PRIMARY KEY,	name VARCHAR(50));CREATE TABLE students(	student_id int(11) PRIMARY KEY,	student_number VARCHAR(12) UNIQUE,	student_name VARCHAR(50),	major_id INT(11),	FOREIGN KEY (major_id) REFERENCES majors(major_id));CREATE TABLE payments(	payment_id int(11) PRIMARY KEY,	payment_date DATE,	payment_amount DECIMAL(8,2),	student_id INT(11),	FOREIGN KEY (student_id) REFERENCES students(student_id));CREATE TABLE subjects(	subject_id INT(11)PRIMARY KEY,	subject_name VARCHAR(50));CREATE TABLE agenda(	student_id INT(11),	subject_id INT(11),	PRIMARY KEY (student_id,subject_id),	FOREIGN KEY (student_id) REFERENCES students(student_id),	FOREIGN KEY (subject_id) REFERENCES subjects(subject_id));USE geography;SELECT m.mountain_range,	   p.peak_name,	   p.elevationFROM mountains m,peaks pWHERE m.mountain_range='Rila' AND	  p.mountain_id IN (SELECT  m.id FROM mountains WHERE m.mountain_range='Rila')ORDER BY p.elevation DESC;